ALTER TABLE openness_tree_db.trees_laser_cleaned_oslo ADD COLUMN registration_error boolean;
UPDATE openness_tree_db.trees_laser_cleaned_oslo SET registration_error = TRUE WHERE "selected" = 1 AND id NOT IN (SELECT id FROM openness_tree_db.trees_laser_cleaned_oslo_lf WHERE "selected" = 1);

SET search_path TO openness_tree_db;
UPDATE openness_tree_db.trees_laser_cleaned_oslo SET 
  geom = x.wkb_geometry,
  registered_by = x.registered_by,
  registered_date = CAST(x.registered_date AS timestamp without time zone),
  tree_species = x.tree_species,
  part_of_an_avenue = CAST(x.part_of_an_avenue AS boolean),
  part_of_a_forest = CAST(x.part_of_a_forest AS boolean),
  single_tree = CAST(x.single_tree AS boolean),
  tree_loc = x.tree_loc,
  slope_field = x.slope_field,
  stem_number = x.stem_number,
  height_of_division = x.height_of_division,
  stem_min_circumference = x.stem_min_circumference,
  stem_max_circumference = x.stem_max_circumference,
  age_min = x.age_min,
  age_max = x.age_max,
  height_m = x.height_m,
  crown_diameter_min = x.crown_diameter_min,
  crown_diameter_max = x.crown_diameter_max,
  health_roots_excavation = CAST(x.health_roots_excavation AS boolean),
  health_roots_soilbulge = CAST(x.health_roots_soilbulge AS boolean),
  health_roots_rot = x.health_roots_rot,
  health_roots_choking = CAST(x.health_roots_choking AS boolean),
  health_roots_insects = CAST(x.health_roots_insects AS boolean),
  health_roots_injuries = CAST(x.health_roots_injuries AS boolean),
  health_roots_soil_compaction = CAST(x.health_roots_soil_compaction AS boolean),
  health_roots_restrictions = x.health_roots_restrictions,
  health_root_value = x.health_root_value,
  health_lower_stem_rot_fungi = CAST(x.health_lower_stem_rot_fungi AS boolean),
  health_lower_stem_hollow = x.health_lower_stem_hollow,
  health_lower_stem_injuries = CAST(x.health_lower_stem_injuries AS boolean),
  health_lower_stem_dogs_uric = CAST(x.health_lower_stem_dogs_uric AS boolean),
  health_lower_stem_epiphytes = CAST(x.health_lower_stem_epiphytes AS boolean),
  health_stem_rot_fungi = CAST(x.health_stem_rot_fungi AS boolean),
  health_stem_hollow = x.health_stem_hollow,
  health_stem_injuries = CAST(x.health_stem_injuries AS boolean),
  health_stem_sloping_angle = x.health_stem_sloping_angle,
  health_stem_fork = CAST(x.health_stem_fork AS boolean),
  health_stem_resin_flow = CAST(x.health_stem_resin_flow AS boolean),
  health_stem_proliferation = CAST(x.health_stem_proliferation AS boolean),
  health_stem_epiphytes = CAST(x.health_stem_epiphytes AS boolean),
  health_stem_value = x.health_stem_value,
  health_main_branches_deadwood = x.health_main_branches_deadwood,
  health_main_branches_scars = x.health_main_branches_scars,
  health_main_branches_missing_leading_shoot = CAST(x.health_main_branches_missing_leading_shoot AS boolean),
  health_main_branches_epiphytes = CAST(x.health_main_branches_epiphytes AS boolean),
  health_main_branches_value = x.health_main_branches_value,
  health_minor_branches_deadwood = x.health_minor_branches_deadwood,
  health_minor_branches_scars = x.health_minor_branches_scars,
  health_minor_branches_epiphytes = CAST(x.health_minor_branches_epiphytes AS boolean),
  health_minor_branches_value = x.health_minor_branches_value,
  health_twigs_buds_dead = x.health_twigs_buds_dead,
  health_twigs_buds_injury_leaves = CAST(x.health_twigs_buds_injury_leaves AS boolean),
  health_twigs_buds_injury_buds = CAST(x.health_twigs_buds_injury_buds AS boolean),
  health_twigs_buds_few_leaves = CAST(x.health_twigs_buds_few_leaves AS boolean),
  health_twigs_buds_cut = CAST(x.health_twigs_buds_cut AS boolean),
  health_twigs_buds_value = x.health_twigs_buds_value,
  health_factor = x.health_factor,
  place_adaption_de_icing_salts = CAST(x.place_adaption_de_icing_salts AS boolean),
  place_adaption_trampling = CAST(x.place_adaption_trampling AS boolean),
  place_adaption_little_light = CAST(x.place_adaption_little_light AS boolean),
  place_adaption_restricted_infiltration = CAST(x.place_adaption_restricted_infiltration AS boolean),
  place_adaption_cult_hist = CAST(x.place_adaption_cult_hist AS boolean),
  place_adaption_value = x.place_adaption_value,
  place_architecture_harmony = x.place_architecture_harmony,
  place_architecture_contact = CAST(x.place_architecture_contact AS boolean),
  place_architecture_traffic_mark = CAST(x.place_architecture_traffic_mark AS boolean),
  place_architecture_value = x.place_architecture_value,
  place_aesthetics_residence_within_treehight_distance = CAST(x.place_aesthetics_residence_within_treehight_distance AS boolean),
  place_aesthetics_impressive_hight = CAST(x.place_aesthetics_impressive_hight AS boolean),
  place_aesthetics_impressive_growth_form = CAST(x.place_aesthetics_impressive_growth_form AS boolean),
  place_aesthetics_group = CAST(x.place_aesthetics_group AS boolean),
  place_aesthetics_value = x.place_aesthetics_value,
  place_environment_shaddowing = CAST(x.place_environment_shaddowing AS boolean),
  place_environment_habitat = x.place_environment_habitat,
  place_environment_wind_protection = CAST(x.place_environment_wind_protection AS boolean),
  place_environment_dust_protection = CAST(x.place_environment_dust_protection AS boolean),
  place_environment_sun_protection = CAST(x.place_environment_sun_protection AS boolean),
  place_environment_rain_protection = CAST(x.place_environment_rain_protection AS boolean),
  place_environment_value = x.place_environment_value,
  place_visibility_public = CAST(x.place_visibility_public AS boolean),
  place_visibility_distance_public = x.place_visibility_distance_public,
  place_visibility_frequency = x.place_visibility_frequency,
  place_visibility_directions = x.place_visibility_directions,
  place_visibility_value = x.place_visibility_value,
  place_factor = x.place_factor,
  notes = x.notes FROM (SELECT
  *
  FROM trees_laser_cleaned_oslo_l WHERE registered_by IS NOT NULL OR registered_date IS NOT NULL OR tree_species IS NOT NULL) AS x 
  WHERE trees_laser_cleaned_oslo.id = x.id;

SET search_path TO openness_tree_db;
UPDATE openness_tree_db.trees_laser_cleaned_oslo SET 
  geom = x.wkb_geometry,
  registered_by = x.registered_by,
  registered_date = CAST(x.registered_date AS timestamp without time zone),
  tree_species = x.tree_species,
  part_of_an_avenue = CAST(x.part_of_an_avenue AS boolean),
  part_of_a_forest = CAST(x.part_of_a_forest AS boolean),
  single_tree = CAST(x.single_tree AS boolean),
  tree_loc = x.tree_loc,
  slope_field = x.slope_field,
  stem_number = x.stem_number,
  height_of_division = x.height_of_division,
  stem_min_circumference = x.stem_min_circumference,
  stem_max_circumference = x.stem_max_circumference,
  age_min = x.age_min,
  age_max = x.age_max,
  height_m = x.height_m,
  crown_diameter_min = x.crown_diameter_min,
  crown_diameter_max = x.crown_diameter_max,
  health_roots_excavation = CAST(x.health_roots_excavation AS boolean),
  health_roots_soilbulge = CAST(x.health_roots_soilbulge AS boolean),
  health_roots_rot = x.health_roots_rot,
  health_roots_choking = CAST(x.health_roots_choking AS boolean),
  health_roots_insects = CAST(x.health_roots_insects AS boolean),
  health_roots_injuries = CAST(x.health_roots_injuries AS boolean),
  health_roots_soil_compaction = CAST(x.health_roots_soil_compaction AS boolean),
  health_roots_restrictions = x.health_roots_restrictions,
  health_root_value = x.health_root_value,
  health_lower_stem_rot_fungi = CAST(x.health_lower_stem_rot_fungi AS boolean),
  health_lower_stem_hollow = x.health_lower_stem_hollow,
  health_lower_stem_injuries = CAST(x.health_lower_stem_injuries AS boolean),
  health_lower_stem_dogs_uric = CAST(x.health_lower_stem_dogs_uric AS boolean),
  health_lower_stem_epiphytes = CAST(x.health_lower_stem_epiphytes AS boolean),
  health_stem_rot_fungi = CAST(x.health_stem_rot_fungi AS boolean),
  health_stem_hollow = x.health_stem_hollow,
  health_stem_injuries = CAST(x.health_stem_injuries AS boolean),
  health_stem_sloping_angle = x.health_stem_sloping_angle,
  health_stem_fork = CAST(x.health_stem_fork AS boolean),
  health_stem_resin_flow = CAST(x.health_stem_resin_flow AS boolean),
  health_stem_proliferation = CAST(x.health_stem_proliferation AS boolean),
  health_stem_epiphytes = CAST(x.health_stem_epiphytes AS boolean),
  health_stem_value = x.health_stem_value,
  health_main_branches_deadwood = x.health_main_branches_deadwood,
  health_main_branches_scars = x.health_main_branches_scars,
  health_main_branches_missing_leading_shoot = CAST(x.health_main_branches_missing_leading_shoot AS boolean),
  health_main_branches_epiphytes = CAST(x.health_main_branches_epiphytes AS boolean),
  health_main_branches_value = x.health_main_branches_value,
  health_minor_branches_deadwood = x.health_minor_branches_deadwood,
  health_minor_branches_scars = x.health_minor_branches_scars,
  health_minor_branches_epiphytes = CAST(x.health_minor_branches_epiphytes AS boolean),
  health_minor_branches_value = x.health_minor_branches_value,
  health_twigs_buds_dead = x.health_twigs_buds_dead,
  health_twigs_buds_injury_leaves = CAST(x.health_twigs_buds_injury_leaves AS boolean),
  health_twigs_buds_injury_buds = CAST(x.health_twigs_buds_injury_buds AS boolean),
  health_twigs_buds_few_leaves = CAST(x.health_twigs_buds_few_leaves AS boolean),
  health_twigs_buds_cut = CAST(x.health_twigs_buds_cut AS boolean),
  health_twigs_buds_value = x.health_twigs_buds_value,
  health_factor = x.health_factor,
  place_adaption_de_icing_salts = CAST(x.place_adaption_de_icing_salts AS boolean),
  place_adaption_trampling = CAST(x.place_adaption_trampling AS boolean),
  place_adaption_little_light = CAST(x.place_adaption_little_light AS boolean),
  place_adaption_restricted_infiltration = CAST(x.place_adaption_restricted_infiltration AS boolean),
  place_adaption_cult_hist = CAST(x.place_adaption_cult_hist AS boolean),
  place_adaption_value = x.place_adaption_value,
  place_architecture_harmony = x.place_architecture_harmony,
  place_architecture_contact = CAST(x.place_architecture_contact AS boolean),
  place_architecture_traffic_mark = CAST(x.place_architecture_traffic_mark AS boolean),
  place_architecture_value = x.place_architecture_value,
  place_aesthetics_residence_within_treehight_distance = CAST(x.place_aesthetics_residence_within_treehight_distance AS boolean),
  place_aesthetics_impressive_hight = CAST(x.place_aesthetics_impressive_hight AS boolean),
  place_aesthetics_impressive_growth_form = CAST(x.place_aesthetics_impressive_growth_form AS boolean),
  place_aesthetics_group = CAST(x.place_aesthetics_group AS boolean),
  place_aesthetics_value = x.place_aesthetics_value,
  place_environment_shaddowing = CAST(x.place_environment_shaddowing AS boolean),
  place_environment_habitat = x.place_environment_habitat,
  place_environment_wind_protection = CAST(x.place_environment_wind_protection AS boolean),
  place_environment_dust_protection = CAST(x.place_environment_dust_protection AS boolean),
  place_environment_sun_protection = CAST(x.place_environment_sun_protection AS boolean),
  place_environment_rain_protection = CAST(x.place_environment_rain_protection AS boolean),
  place_environment_value = x.place_environment_value,
  place_visibility_public = CAST(x.place_visibility_public AS boolean),
  place_visibility_distance_public = x.place_visibility_distance_public,
  place_visibility_frequency = x.place_visibility_frequency,
  place_visibility_directions = x.place_visibility_directions,
  place_visibility_value = x.place_visibility_value,
  place_factor = x.place_factor,
  notes = x.notes FROM (SELECT
  *
  FROM trees_laser_cleaned_oslo_lf WHERE registered_by IS NOT NULL OR registered_date IS NOT NULL OR tree_species IS NOT NULL) AS x 
  WHERE trees_laser_cleaned_oslo.id = x.id;

UPDATE openness_tree_db.trees_laser_cleaned_oslo SET registration_error = TRUE WHERE notes = 'shrubby vegetation');

INSERT INTO openness_tree_db.trees_laser_cleaned_oslo (
  geom,
  registered_by,
  registered_date,
  tree_species,
  part_of_an_avenue,
  part_of_a_forest,
  single_tree,
  tree_loc,
  slope_field,
  stem_number,
  height_of_division,
  stem_min_circumference,
  stem_max_circumference,
  age_min,
  age_max,
  height_m,
  crown_diameter_min,
  crown_diameter_max,
  health_roots_excavation,
  health_roots_soilbulge,
  health_roots_rot,
  health_roots_choking,
  health_roots_insects,
  health_roots_injuries,
  health_roots_soil_compaction,
  health_roots_restrictions,
  health_root_value,
  health_lower_stem_rot_fungi,
  health_lower_stem_hollow,
  health_lower_stem_injuries,
  health_lower_stem_dogs_uric,
  health_lower_stem_epiphytes,
  health_stem_rot_fungi,
  health_stem_hollow,
  health_stem_injuries,
  health_stem_sloping_angle,
  health_stem_fork,
  health_stem_resin_flow,
  health_stem_proliferation,
  health_stem_epiphytes,
  health_stem_value,
  health_main_branches_deadwood,
  health_main_branches_scars,
  health_main_branches_missing_leading_shoot,
  health_main_branches_epiphytes,
  health_main_branches_value,
  health_minor_branches_deadwood,
  health_minor_branches_scars,
  health_minor_branches_epiphytes,
  health_minor_branches_value,
  health_twigs_buds_dead,
  health_twigs_buds_injury_leaves,
  health_twigs_buds_injury_buds,
  health_twigs_buds_few_leaves,
  health_twigs_buds_cut,
  health_twigs_buds_value,
  health_factor,
  place_adaption_de_icing_salts,
  place_adaption_trampling,
  place_adaption_little_light,
  place_adaption_restricted_infiltration,
  place_adaption_cult_hist,
  place_adaption_value,
  place_architecture_harmony,
  place_architecture_contact,
  place_architecture_traffic_mark,
  place_architecture_value,
  place_aesthetics_residence_within_treehight_distance,
  place_aesthetics_impressive_hight,
  place_aesthetics_impressive_growth_form,
  place_aesthetics_group,
  place_aesthetics_value,
  place_environment_shaddowing,
  place_environment_habitat,
  place_environment_wind_protection,
  place_environment_dust_protection,
  place_environment_sun_protection,
  place_environment_rain_protection,
  place_environment_value,
  place_visibility_public,
  place_visibility_distance_public,
  place_visibility_frequency,
  place_visibility_directions,
  place_visibility_value,
  place_factor,
  notes) VALUES (SELECT
  wkb_geometry AS geom,
  registered_by,
  registered_date,
  tree_species,
  part_of_an_avenue,
  part_of_a_forest,
  single_tree,
  tree_loc,
  slope_field,
  stem_number,
  height_of_division,
  stem_min_circumference,
  stem_max_circumference,
  age_min,
  age_max,
  height_m,
  crown_diameter_min,
  crown_diameter_max,
  health_roots_excavation,
  health_roots_soilbulge,
  health_roots_rot,
  health_roots_choking,
  health_roots_insects,
  health_roots_injuries,
  health_roots_soil_compaction,
  health_roots_restrictions,
  health_root_value,
  health_lower_stem_rot_fungi,
  health_lower_stem_hollow,
  health_lower_stem_injuries,
  health_lower_stem_dogs_uric,
  health_lower_stem_epiphytes,
  health_stem_rot_fungi,
  health_stem_hollow,
  health_stem_injuries,
  health_stem_sloping_angle,
  health_stem_fork,
  health_stem_resin_flow,
  health_stem_proliferation,
  health_stem_epiphytes,
  health_stem_value,
  health_main_branches_deadwood,
  health_main_branches_scars,
  health_main_branches_missing_leading_shoot,
  health_main_branches_epiphytes,
  health_main_branches_value,
  health_minor_branches_deadwood,
  health_minor_branches_scars,
  health_minor_branches_epiphytes,
  health_minor_branches_value,
  health_twigs_buds_dead,
  health_twigs_buds_injury_leaves,
  health_twigs_buds_injury_buds,
  health_twigs_buds_few_leaves,
  health_twigs_buds_cut,
  health_twigs_buds_value,
  health_factor,
  place_adaption_de_icing_salts,
  place_adaption_trampling,
  place_adaption_little_light,
  place_adaption_restricted_infiltration,
  place_adaption_cult_hist,
  place_adaption_value,
  place_architecture_harmony,
  place_architecture_contact,
  place_architecture_traffic_mark,
  place_architecture_value,
  place_aesthetics_residence_within_treehight_distance,
  place_aesthetics_impressive_hight,
  place_aesthetics_impressive_growth_form,
  place_aesthetics_group,
  place_aesthetics_value,
  place_environment_shaddowing,
  place_environment_habitat,
  place_environment_wind_protection,
  place_environment_dust_protection,
  place_environment_sun_protection,
  place_environment_rain_protection,
  place_environment_value,
  place_visibility_public,
  place_visibility_distance_public,
  place_visibility_frequency,
  place_visibility_directions,
  place_visibility_value,
  place_factor,
  notes
  FROM openness_tree_db.trees_laser_cleaned_oslo_lf WHERE id NOT IN (SELECT id FROM openness_tree_db.trees_laser_cleaned_oslo) AS x;
